services:
  web:
    image: ghcr.io/contacthorse/forever-app:latest
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      RAILS_ENV: ${RAILS_ENV:-production}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@db:5432/address_collector_production}
      LICENSE_KEY: ${LICENSE_KEY}
      LICENSE_VALIDATION_URL: ${LICENSE_VALIDATION_URL:-https://contacthorse.com/api/licenses/activate}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/up || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    tty: true
    stdin_open: true

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ${POSTGRES_DB:-address_collector_production}
      POSTGRES_USER: postgres
      POSTGRES_SHARED_BUFFERS: 32MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 128MB
      POSTGRES_MAINTENANCE_WORK_MEM: 16MB
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: 0.9
      POSTGRES_WAL_BUFFERS: 1MB
      POSTGRES_DEFAULT_STATISTICS_TARGET: 100
    ports:
      - "5432:5432"
    volumes:
      - ac_pg_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres -d ${POSTGRES_DB:-address_collector_production}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    command: >
      postgres
      -c shared_buffers=32MB
      -c effective_cache_size=128MB
      -c maintenance_work_mem=16MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=1MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200

volumes:
  ac_pg_data:

